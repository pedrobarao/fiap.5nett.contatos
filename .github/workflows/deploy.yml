
name: Deploy to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente de deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  AZURE_RESOURCE_GROUP: 'dev-rg-fiap-westus2-01'
  AKS_CLUSTER_NAME: 'dev-aks-fiap-westus2-01'
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  NAMESPACE: 'contatos'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build e Push - Cadastro API
        run: |
          docker build \
            -t ${{ env.DOCKER_USERNAME }}/cadastro-contatos-api:${{ github.sha }} \
            -t ${{ env.DOCKER_USERNAME }}/cadastro-contatos-api:latest \
            -f ./src/Services/Contatos.Cadastro.Api/Dockerfile \
            .
          docker push ${{ env.DOCKER_USERNAME }}/cadastro-contatos-api:${{ github.sha }}
          docker push ${{ env.DOCKER_USERNAME }}/cadastro-contatos-api:latest

      - name: Build e Push - Consulta API
        run: |
          docker build \
            -t ${{ env.DOCKER_USERNAME }}/consulta-contatos-api:${{ github.sha }} \
            -t ${{ env.DOCKER_USERNAME }}/consulta-contatos-api:latest \
            -f ./src/Services/Contatos.Consulta.Api/Dockerfile \
            .
          docker push ${{ env.DOCKER_USERNAME }}/consulta-contatos-api:${{ github.sha }}
          docker push ${{ env.DOCKER_USERNAME }}/consulta-contatos-api:latest

      - name: Login no Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Obter credenciais do AKS
        run: |
          az aks get-credentials \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.AKS_CLUSTER_NAME }} \
            --overwrite-existing

      - name: Criar namespace (se não existir)
        run: |
          kubectl apply -f deploy/k8s/namespace.yaml

      - name: Aplicar Secrets
        run: |
          kubectl apply -f deploy/k8s/secrets.yaml -n ${{ env.NAMESPACE }}

      - name: Deploy PostgreSQL
        run: |
          kubectl apply -f deploy/k8s/cadastro-api/postgres-pvc.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f deploy/k8s/cadastro-api/postgres.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f deploy/k8s/cadastro-api/postgres-service.yaml -n ${{ env.NAMESPACE }}

      - name: Deploy MongoDB
        run: |
          kubectl apply -f deploy/k8s/consulta-api/ -n ${{ env.NAMESPACE }} || true

      - name: Deploy RabbitMQ
        run: |
          kubectl apply -f deploy/k8s/rabbitmq/ -n ${{ env.NAMESPACE }}

      - name: Deploy Prometheus
        run: |
          kubectl apply -f deploy/k8s/prometheus/ -n ${{ env.NAMESPACE }}

      - name: Deploy Grafana
        run: |
          kubectl apply -f deploy/k8s/grafana/ -n ${{ env.NAMESPACE }}

      - name: Atualizar imagem - Cadastro API
        run: |
          kubectl set image deployment/cadastro-contatos-api \
            cadastro-contatos-api=${{ env.DOCKER_USERNAME }}/cadastro-contatos-api:${{ github.sha }} \
            -n ${{ env.NAMESPACE }}

      - name: Deploy Cadastro API
        run: |
          kubectl apply -f deploy/k8s/cadastro-api/cadastro-api.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f deploy/k8s/cadastro-api/service.yaml -n ${{ env.NAMESPACE }}
          kubectl apply -f deploy/k8s/cadastro-api/hpa.yaml -n ${{ env.NAMESPACE }}

      - name: Atualizar imagem - Consulta API
        run: |
          kubectl set image deployment/consulta-contatos-api \
            consulta-contatos-api=${{ env.DOCKER_USERNAME }}/consulta-contatos-api:${{ github.sha }} \
            -n ${{ env.NAMESPACE }}

      - name: Deploy Consulta API
        run: |
          kubectl apply -f deploy/k8s/consulta-api/ -n ${{ env.NAMESPACE }}

      - name: Deploy Metrics Server
        run: |
          kubectl apply -f deploy/k8s/metrics-server.yaml || true

      - name: Verificar status dos deployments
        run: |
          kubectl rollout status deployment/cadastro-contatos-api -n ${{ env.NAMESPACE }} --timeout=5m
          kubectl rollout status deployment/consulta-contatos-api -n ${{ env.NAMESPACE }} --timeout=5m

      - name: Obter informações dos serviços
        run: |
          echo "=== Pods ==="
          kubectl get pods -n ${{ env.NAMESPACE }}
          echo ""
          echo "=== Services ==="
          kubectl get services -n ${{ env.NAMESPACE }}
          echo ""
          echo "=== Ingress (se existir) ==="
          kubectl get ingress -n ${{ env.NAMESPACE }} || true